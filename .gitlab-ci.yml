image: java:8
stages:
  - build
  - integration-test
  - deploy
  - acceptance-test
  - destroy
  
build-backend:
  image: java:8
  stage: build
  script:
    - cd component 
    - ./gradlew clean assemble -PdisableIntegrationTests
    - cd ..
  artifacts:
    paths:
      - component/build/libs/component.jar

build-frontend:
  image: node:lts
  stage: build
  before_script:
    - rm -rf /var/lib/apt/lists/*
    - apt-get update
    - apt-cache gencaches
    - apt-get install -y zip 
  script:
    - cd frontend
    - npm i
    - npm run build-server
    - cd server-build
    - zip index.zip index.js
    - cd ..
  artifacts:
    paths:
      - frontend/server-build/index.zip

test-backend:
  image: java:8
  stage: integration-test
  script:
    - cd component 
    - ./gradlew check -PdisableIntegrationTests
 
test-frontend:
  image: node:lts
  stage: integration-test
  script:
    - cd frontend 
    - npm i
    - npm test

deploy-frontend:
  stage: deploy
  image: pulumi/pulumi-nodejs
  variables: 
    FRONTENDURL: " "
  script:
    - cd frontend
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi up -y
    - pulumi stack select dev
    - FRONTENDURL=$(pulumi stack output  url)
    - echo "CYPRESS_BASE_URL=$(pulumi stack output  url )" >> ../../acceptanceTest/cypress.json
    - cd ../..  
  dependencies:
      - build-frontend
  environment:
    name: staging
    url: $FRONTENDUR
  artifacts:
    paths:
      - ./acceptance/cypress.json
    
 
deploy-backend:
  stage: deploy
  image: pulumi/pulumi-nodejs
  script:
    - cd database
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi up -y
    - pulumi stack select dev
    - echo "spring.datasource.url=jdbc:postgresql://$(pulumi stack output  endpoint )/mydb" >> ../../component/src/main/resources/staging.application.properites
    - cd ../..  
    - cd component 
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi up -y
    - echo "BACKEND_URL=$(pulumi stack output  url )" > ../../backendAcceptanceTest/deploy.env
    - cd ../..
  dependencies:
      - build-backend
  artifacts:
    paths:
      - ./component/src/main/resources/staging.application.properites
      - ./backendAcceptanceTest/deploy.env

backend-acceptrance-test:
   stage: acceptance-test
   image: java:8
   script:
     - cd backendAcceptanceTest
     - echo "$BACKEND_URL"
     - export << deploy.env
     - echo $BACKEN_URL
     - ./gradlew cucumber
   dependencies:
      - deploy-backend

destroy-backend:
  stage: destroy
  image: pulumi/pulumi-nodejs
  script:
    - cd database
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi destroy -y
    - cd ../..  
    - cd component 
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi destroy -y
    - cd ../..

destroy-frontend:
  stage: destroy
  image: pulumi/pulumi-nodejs
  script:
    - cd frontend
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi destroy -y
    - cd ../.. 
     
     
