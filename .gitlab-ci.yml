image: java:8

stages:
  - continuose-integration
  - deploy
  - acceptance-test
  - destroy

variables:
  FRONTEND_URL: " "
  BACKEND_URL: " "
  ADATABASE_URL: " "
  
build-backend:
  image: java:8
  stage: continuose-integration
  script:
    - cd component 
    - ./gradlew clean assemble 
    - cd ..
  artifacts:
    paths:
      - component/build/libs/component.jar

build-frontend:
  image: node:lts
  stage: continuose-integration
  before_script:
    - rm -rf /var/lib/apt/lists/*
    - apt-get update
    - apt-cache gencaches
    - apt-get install -y zip 
  script:
    - cd frontend
    - npm i
    - npm run build-server
    - cd server-build
    - zip index.zip index.js
    - cd ..
  artifacts:
    paths:
      - frontend/server-build/index.zip

test-backend:
  image: java:8
  stage: continuose-integration
  script:
    - cd component 
    - ./gradlew check
 
test-frontend:
  image: node:lts
  stage: continuose-integration
  script:
    - cd frontend 
    - npm i
    - export REACT_APP_USE_MSW=true
    - export REACT_APP_BACKEND_URL=http://localhost:3000
    - npm test

deploy-frontend:
  stage: deploy
  image: pulumi/pulumi-nodejs
  script:
    - cd frontend
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi config set REACT_APP_USE_MSW false
    - pulumi up -y
    - FRONTEND_URL=$(pulumi stack output  url)
    - touch cypress.env
    - echo CYPRESS_BASE_URL="$FRONTEND_URL" >> cypress.env
    - touch frontend.env
    - echo REACT_APP_FRONTEND_URL="$FRONTEND_URL" >> frontend.env
    - cd ../..  
  dependencies:
      - build-frontend
  environment:
    name: test
    url: $FRONTEND_URL
  artifacts:
   paths:
     - cypress.env
     - frontend.env
    
 
deploy-backend:
  stage: deploy
  image: pulumi/pulumi-nodejs
  script:
    - cd database
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi up -y
    - ADATABASE_URL=$(pulumi stack output  endpoint)
    - echo DATABASE_URL="$ADATABASE_URL" > database.env
    - cd ../..  
    - cd component 
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi up -y
    - export DATABASE_URL="$ADATABASE_URL"
    - echo $DATABASE_URL
    - BACKEND_URL=$(pulumi stack output  url)
    - echo REACT_APP_BACKEND_URL="$BACKEND_URL" > backend.env
    - cd ../..
  artifacts:
    paths:
      - database.env
      - backend.env
 

backend-acceptance-test:
   stage: acceptance-test
   image: java:8
   script:
     - cd backendAcceptanceTest
     - export < backend.env
     - echo $REACT_APP_BACKEND_URL
     - export < database,env
     - echo $DATABASE_URL
     - ./gradlew cucumber
   dependencies:
     - deploy-backend
  
   
acceptrance-test:
   stage: acceptance-test
   image: cypress/base
   script:
     - cd acceptanceTest
     - npm ci
     - export < cypress.env
     - echo "$FRONTEND_URL"
     - echo $CYPRESS_BASE_URL
     - export < frontend.env
     - export < backend.env
     - echo $REACT_APP_BACKEND_URL
     - export < database.env
     - echo $DATABASE_URL
     - npm run cypress-run
   dependencies:
     - deploy-frontend
     - deploy-backend
   
destroy-backend:
  stage: destroy
  image: pulumi/pulumi-nodejs
  script:
    - cd database
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi destroy -y
    - cd ../..  
    - cd component 
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi destroy -y
    - cd ../..

destroy-frontend:
  stage: destroy
  image: pulumi/pulumi-nodejs
  script:
    - cd frontend
    - cd deployment
    - npm i
    - export PULUMI_ACCESS_TOKEN="$PULUMI_ACCESS_TOKEN"
    - pulumi login
    - pulumi stack select dev
    - pulumi destroy -y
    - cd ../.. 